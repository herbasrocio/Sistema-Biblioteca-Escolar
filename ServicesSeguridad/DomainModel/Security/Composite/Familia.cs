///////////////////////////////////////////////////////////
//  Familia.cs
//  Implementation of the Class Familia
//  Generated by Enterprise Architect
//  Created on:      05-may.-2022 21:16:57
//  Original author: gasto
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;


namespace ServicesSecurity.DomainModel.Security.Composite
{
    /// <summary>
    /// This class (a) defines behaviour for components having children, (b) stores
    /// child components, and (c) implements child-related operations in the Component
    /// interface.
    /// </summary>
    public class Familia : Component
    {

        private List<Component> childrens = new List<Component>();

        public Familia()
        {

        }
        public Familia(Component component, string nombre)
        {
            childrens.Add(component);
            Nombre = nombre;
        }

        public string Nombre { get; set; }

        /// <summary>
        /// Indica si esta Familia representa un Rol del sistema
        /// Los roles tienen nombres que comienzan con "ROL_"
        /// </summary>
        public bool EsRol
        {
            get { return !string.IsNullOrWhiteSpace(Nombre) && Nombre.StartsWith("ROL_"); }
        }

        /// <summary>
        /// Obtiene el nombre del rol sin el prefijo "ROL_"
        /// Ejemplo: "ROL_Administrador" retorna "Administrador"
        /// </summary>
        public string ObtenerNombreRol()
        {
            if (!EsRol) return null;
            return Nombre.Substring(4); // Quitar "ROL_"
        }

        /// <summary>
        /// Propiedad para mostrar el nombre del rol sin prefijo en controles de UI
        /// Retorna el nombre completo si no es un rol
        /// </summary>
        public string NombreRol
        {
            get
            {
                if (EsRol)
                    return Nombre.Substring(4); // Quitar "ROL_"
                return Nombre; // Retornar nombre completo si no es rol
            }
        }


        public List<Component> GetChildrens()
        {
            return childrens;
        }
        /// 
        /// <param name="component"></param>
        public override void Add(Component component)
        {
            //Validar que no tenga referencias circulares...
            childrens.Add(component);
        }

        public override int ChildrenCount()
        {
            return childrens.Count;
        }

        /// 
        /// <param name="component"></param>
        public override void Remove(Component component)
        {
            childrens.RemoveAll(o => o.IdComponent == component.IdComponent);
        }

    }//end Familia

}//end namespace Composite